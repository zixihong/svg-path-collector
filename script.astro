---
// script to get the paths from each fig by clicking. reset after each use.
// import { Image } from 'astro:assets';
// import yourImage from '../assets/yourImage.svg';
---

<!-- <div id= "imageContainer">
    <Image 
        src={yourImage} 
        alt="svg for your image" 
        width={900}
        height={900}
        class="tailwind-css"
        id="yourSVG"
    />


</div> -->

<button type = "button" id = "button">
    delete. make sure to copy your paths to a txt to save.
</button>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const img = document.getElementById("yourSVG");
        const container = document.getElementById("imageContainer");
        let path_array: number[] = [];

        if (!img || !container) {
            return;
        }

        try {
            const response = await fetch(img?.getAttribute('src') || '');
            const svgText = await response.text();
            container.innerHTML = svgText;

            const paths = document.querySelectorAll('path')

            paths.forEach((path, index) => { // tracks each path and its index          
                path.style.cursor = 'pointer';

                // untracked paths turn blue when entered

                path.addEventListener('mouseenter', () =>{
                    if (!path_array.includes(index)){
                        path.style.fill = 'rgb(0, 0, 255)';
                    }
                    
                });

                // save the path to the array and turn it green

                path.addEventListener('click', () => {
                    if (path_array.includes(index)) {
                        console.log(`${index} is already in array`);
                    }
                    else {
                        path.style.fill = 'rgb(0, 255, 0)';
                        path_array.push(index);
                        console.log(path_array)
                    }
                });

                // marks the untracked paths as red to signify that you need to add it

                path.addEventListener('mouseleave', () => {
                    if (!path_array.includes(index)) {
                        path.style.fill = 'rgb(255, 0, 0)'
                    }
                })
            });
        } 
        catch(error) {
            return;
        }

        const button = document.getElementById('button');
        button?.addEventListener("click", () => {
            path_array.length = 0;
            console.log(`${path_array} cleared`);
        });
    });
</script>